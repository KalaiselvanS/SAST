<StructuralRule formatVersion="%FORMATVERSION%" language="%Language%">
    <RuleID>%RULEID%</RuleID>
    <VulnKingdom>Environment</VulnKingdom>
    <VulnCategory>Terraform Bad Practices</VulnCategory>
    <VulnSubcategory>Untrusted Module in Use</VulnSubcategory>
    <DefaultSeverity>2.0</DefaultSeverity>
    <Notes>This template creates a rule to scan Terraform configurations and identify untrusted modules based on a user-provided allow list. The list can consist of an explicit individual registry entry, an explicit list delimited by the "|" character, or a regular expression that matches the intended allow list.</Notes>
    <Description>
        <Abstract><![CDATA[This Terraform configuration uses an untrusted module. This issue is being reported by a custom Terraform Configuration rule.]]></Abstract>
        <Explanation append="true"><![CDATA[As a matter of policy, only the following modules, registries, and/or repositories are permitted:
            Add Allow List
        ]]></Explanation>
        <Recommendations><![CDATA[
            As a security best practice, modules should be written from scratch when possible or sourced from registries and repositories of trusted providers. Update the identified Terraform configuration's source argument to an allowed and trusted module.
	    ]]></Recommendations>
    </Description>
    <Predicate><![CDATA[
					ConfigBlock : blocktype == "module" and attributes contains [
						ConfigPair : name == "source" and not value is [
							ConfigConcrete : value matches "^(%AllowList%)$"
						]*
					]*
				]]></Predicate>
</StructuralRule>